@using Microsoft.AspNetCore.Identity
@using Waveform.Areas.Identity.Data

@inject SignInManager<WaveformUser> SignInManager
@inject UserManager<WaveformUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="dropdown nav-item">
            <span class="material-icons mr-3" style="z-index: 2;">account_circle</span>
            @UserManager.GetUserName(User)
            <ul>
                <li>
                    <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index">Manage account</a>
                </li>
                <li>
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@section Scripts {
    <script>
        $('.dropdown').click(function () {
            $(this).css('display', 'block');
        })
    </script>
}